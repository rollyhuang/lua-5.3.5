# cmake_minimum_required(VERSION 3.0)
# project(lualib)
if(APPLE)
    add_compile_options(-std=gnu99 -g -Wall -Wextra -DLUA_COMPAT_5_2 -DLUA_COMPAT_MODULE -DLUA_USE_MACOSX)
endif(APPLE)
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    add_compile_options(-std=gnu99 -g -Wall -Wextra -DLUA_COMPAT_5_2 -DLUA_COMPAT_MODULE -DLUA_USE_LINUX)
endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
if(WIN32)
    add_compile_options(-Wall -DLUA_COMPAT_5_2 -DLUA_COMPAT_MODULE)
endif(WIN32)
# set(CMAKE_CXX_FLAGS xxx)
# set(CMAKE_C_FLAGS xxx)
include_directories(../include)
aux_source_directory(. LUA_LIB_SRC)
add_library(lualib SHARED ${LUA_LIB_SRC})
set_target_properties(lualib PROPERTIES OUTPUT_NAME "lua")
add_library(lualibstatic STATIC ${LUA_LIB_SRC})
set_target_properties(lualibstatic PROPERTIES OUTPUT_NAME "lua")
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    target_link_libraries(lualib m dl)
    target_link_libraries(lualibstatic m dl)
endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
